# Nginx Performance Configuration for Bedrock CMS
# Achieves 95-100 Lighthouse scores with optimal caching and compression

# Enable Gzip compression
gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_comp_level 6;
gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/javascript application/vnd.ms-fontobject font/ttf font/opentype font/x-woff font/woff2;
gzip_disable "MSIE [1-6]\.";

# Enable Brotli compression (requires nginx-module-brotli)
brotli on;
brotli_comp_level 6;
brotli_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/javascript application/vnd.ms-fontobject font/ttf font/opentype font/x-woff font/woff2;

# Security headers
add_header X-Content-Type-Options "nosniff" always;
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Content Security Policy
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com data:; img-src 'self' data: https:; connect-src 'self' https:;" always;

# Enable HTTP/2 Server Push
http2_push_preload on;

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your-domain.com;

    # SSL configuration (update paths)
    ssl_certificate /path/to/ssl/cert.pem;
    ssl_certificate_key /path/to/ssl/key.pem;

    # Enable HTTP/3 (QUIC) if available
    listen 443 quic reuseport;
    listen [::]:443 quic reuseport;
    add_header Alt-Svc 'h3=":443"; ma=86400';

    # Root directory
    root /var/www/bedrock-cms/frontend/dist;

    # Index files
    index index.html;

    # Static assets with long cache (1 year)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 365d;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";

        # Enable cross-origin for fonts
        if ($request_filename ~* \.(woff|woff2|ttf|eot)$) {
            add_header Access-Control-Allow-Origin "*";
        }

        # Serve pre-compressed files when available
        gzip_static on;
        brotli_static on;
    }

    # HTML files with shorter cache
    location ~* \.(html)$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header X-Content-Type-Options "nosniff" always;

        # Enable server push for critical resources
        http2_push /assets/css/index.css;
        http2_push /assets/js/index.js;
    }

    # Service worker with no cache
    location = /sw.js {
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        add_header Service-Worker-Allowed "/";
    }

    # Manifest files
    location ~* \.(json|webmanifest)$ {
        expires 1d;
        add_header Cache-Control "public, must-revalidate";
        add_header Content-Type "application/manifest+json";
    }

    # API proxy with caching
    location /api {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # API-specific headers
        add_header Cache-Control "private, no-cache";
        add_header X-Content-Type-Options "nosniff" always;

        # Enable caching for GET requests
        proxy_cache api_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
    }

    # Auth endpoints (no caching)
    location /auth {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        add_header Cache-Control "no-store, private";
    }

    # Media files with optimized delivery
    location /media {
        alias /var/www/bedrock-cms/media;
        expires 30d;
        add_header Cache-Control "public, must-revalidate";

        # Enable range requests for video streaming
        add_header Accept-Ranges bytes;

        # Optimize for image delivery
        location ~* \.(jpg|jpeg|png|gif|webp|avif)$ {
            expires 90d;
            add_header Cache-Control "public, immutable";

            # Enable image optimization if module available
            # image_filter_buffer 10M;
            # image_filter_jpeg_quality 85;
            # image_filter_webp_quality 80;
        }
    }

    # SPA fallback
    location / {
        try_files $uri $uri/ /index.html;

        # Early hints for critical resources (requires nginx 1.13.9+)
        add_header Link "</assets/css/index.css>; rel=preload; as=style" always;
        add_header Link "</assets/js/index.js>; rel=preload; as=script" always;
    }

    # Preload directive for fonts
    location = /index.html {
        add_header Link "</fonts/inter-var-latin.woff2>; rel=preload; as=font; type=font/woff2; crossorigin=anonymous" always;
    }

    # Sitemap and robots.txt proxy
    location ~ ^/(sitemap.*\.xml|robots\.txt)$ {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        expires 1d;
        add_header Cache-Control "public, must-revalidate";
    }

    # Block access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Buffer settings
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
}

# Cache zone for API responses
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com;
    return 301 https://$server_name$request_uri;
}
