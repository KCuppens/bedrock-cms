# Generated by Django 4.2.24 on 2025-09-07 04:46

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SearchIndex",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "title",
                    models.CharField(help_text="Searchable title", max_length=500),
                ),
                ("content", models.TextField(help_text="Full searchable content")),
                (
                    "excerpt",
                    models.TextField(blank=True, help_text="Short excerpt for results"),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True, help_text="Canonical URL for this content"
                    ),
                ),
                (
                    "image_url",
                    models.URLField(blank=True, help_text="Representative image"),
                ),
                ("locale_code", models.CharField(blank=True, max_length=10)),
                (
                    "search_category",
                    models.CharField(
                        help_text="Category for search filtering (e.g., 'blog', 'page', 'product')",
                        max_length=50,
                    ),
                ),
                (
                    "search_tags",
                    models.JSONField(default=list, help_text="Tags for faceted search"),
                ),
                ("is_published", models.BooleanField(default=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "search_weight",
                    models.FloatField(
                        default=1.0,
                        help_text="Weight for search ranking (higher = more relevant)",
                    ),
                ),
                ("indexed_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Search Index Entry",
                "verbose_name_plural": "Search Index Entries",
            },
        ),
        migrations.CreateModel(
            name="SearchSuggestion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("suggestion_text", models.CharField(max_length=200, unique=True)),
                (
                    "normalized_text",
                    models.CharField(
                        help_text="Normalized version for matching", max_length=200
                    ),
                ),
                (
                    "search_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of times this was searched"
                    ),
                ),
                (
                    "result_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Average number of results for this query"
                    ),
                ),
                (
                    "click_through_rate",
                    models.FloatField(
                        default=0.0,
                        help_text="Percentage of searches that result in clicks",
                    ),
                ),
                (
                    "categories",
                    models.JSONField(
                        default=list,
                        help_text="Content categories this suggestion relates to",
                    ),
                ),
                (
                    "locale_codes",
                    models.JSONField(
                        default=list,
                        help_text="Locales where this suggestion is relevant",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_promoted",
                    models.BooleanField(
                        default=False, help_text="Manually promoted suggestion"
                    ),
                ),
                ("last_searched_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Search Suggestion",
                "verbose_name_plural": "Search Suggestions",
                "ordering": ["-search_count", "suggestion_text"],
                "indexes": [
                    models.Index(
                        fields=["normalized_text"],
                        name="search_sear_normali_d0ccad_idx",
                    ),
                    models.Index(
                        fields=["-search_count", "is_active"],
                        name="search_sear_search__05a21e_idx",
                    ),
                    models.Index(
                        fields=["is_promoted", "-search_count"],
                        name="search_sear_is_prom_bc39fd_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SearchQuery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "query_text",
                    models.CharField(help_text="The search query", max_length=500),
                ),
                (
                    "filters",
                    models.JSONField(
                        default=dict,
                        help_text="Applied filters (category, locale, etc.)",
                    ),
                ),
                ("session_key", models.CharField(blank=True, max_length=40)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("result_count", models.PositiveIntegerField(default=0)),
                (
                    "execution_time_ms",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Query execution time in milliseconds",
                        null=True,
                    ),
                ),
                (
                    "click_position",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Position of clicked result (1-based)",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "clicked_result",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="clicks",
                        to="search.searchindex",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="search_queries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Search Query",
                "verbose_name_plural": "Search Queries",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["query_text", "-created_at"],
                        name="search_sear_query_t_7a68c1_idx",
                    ),
                    models.Index(
                        fields=["user", "-created_at"],
                        name="search_sear_user_id_544a0a_idx",
                    ),
                    models.Index(
                        fields=["-created_at"], name="search_sear_created_29f94e_idx"
                    ),
                    models.Index(
                        fields=["result_count", "-created_at"],
                        name="search_sear_result__c51006_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="searchindex",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="search_sear_content_97a989_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="searchindex",
            index=models.Index(
                fields=["search_category", "-published_at"],
                name="search_sear_search__1a6a24_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="searchindex",
            index=models.Index(
                fields=["is_published", "-published_at"],
                name="search_sear_is_publ_999f6d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="searchindex",
            index=models.Index(
                fields=["locale_code", "is_published"],
                name="search_sear_locale__5b0941_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="searchindex",
            index=models.Index(
                fields=["-search_weight", "-published_at"],
                name="search_sear_search__4f9de2_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="searchindex",
            constraint=models.UniqueConstraint(
                fields=("content_type", "object_id"),
                name="unique_search_index_per_object",
            ),
        ),
    ]
