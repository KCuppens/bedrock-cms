# Generated by Django 4.2.24 on 2025-09-07 04:22

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import apps.accounts.rbac


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("media", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("i18n", "0003_translationunit_uimessage_uimessagetranslation_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=120, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "color",
                    models.CharField(
                        default="#6366f1",
                        help_text="Hex color code for the category",
                        max_length=7,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
            },
            bases=(models.Model, apps.accounts.rbac.RBACMixin),
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(max_length=60, unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "ordering": ["name"],
            },
            bases=(models.Model, apps.accounts.rbac.RBACMixin),
        ),
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("group_id", models.UUIDField(db_index=True, default=uuid.uuid4)),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=250)),
                (
                    "excerpt",
                    models.TextField(
                        blank=True,
                        help_text="Short description of the post",
                        max_length=500,
                    ),
                ),
                (
                    "content",
                    models.TextField(help_text="Main content of the blog post"),
                ),
                (
                    "blocks",
                    models.JSONField(
                        default=list, help_text="Structured content blocks"
                    ),
                ),
                (
                    "seo",
                    models.JSONField(
                        default=dict,
                        help_text="SEO metadata including title, description, and image",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("scheduled", "Scheduled"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=12,
                    ),
                ),
                (
                    "featured",
                    models.BooleanField(
                        default=False, help_text="Mark as featured post"
                    ),
                ),
                ("allow_comments", models.BooleanField(default=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "scheduled_for",
                    models.DateTimeField(
                        blank=True,
                        help_text="When to publish if status is scheduled",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="blog_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="posts",
                        to="blog.category",
                    ),
                ),
                (
                    "locale",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="i18n.locale"
                    ),
                ),
                (
                    "social_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image for social media sharing",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="blog_post_social_images",
                        to="media.asset",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="posts", to="blog.tag"
                    ),
                ),
            ],
            options={
                "verbose_name": "Blog Post",
                "verbose_name_plural": "Blog Posts",
                "ordering": ["-published_at", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "-published_at"],
                        name="blog_blogpo_status_c0e87f_idx",
                    ),
                    models.Index(
                        fields=["locale", "status", "-published_at"],
                        name="blog_blogpo_locale__2cd8f3_idx",
                    ),
                    models.Index(
                        fields=["category", "status", "-published_at"],
                        name="blog_blogpo_categor_5a3f62_idx",
                    ),
                    models.Index(
                        fields=["author", "-published_at"],
                        name="blog_blogpo_author__de6f3c_idx",
                    ),
                    models.Index(
                        fields=["featured", "status", "-published_at"],
                        name="blog_blogpo_feature_9b8b17_idx",
                    ),
                    models.Index(
                        fields=["group_id"], name="blog_blogpo_group_i_f17a01_idx"
                    ),
                ],
            },
            bases=(models.Model, apps.accounts.rbac.RBACMixin),
        ),
        migrations.AddConstraint(
            model_name="blogpost",
            constraint=models.UniqueConstraint(
                fields=("slug", "locale"), name="unique_blog_slug_per_locale"
            ),
        ),
    ]
